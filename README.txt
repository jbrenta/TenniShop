# TennisShop - Documentazione del Progetto

## Struttura del Progetto

### Componenti Principali
1. `Home` (src/pages/Home/Home.jsx)
   - Componente principale che gestisce la landing page
   - Integra tutti i componenti principali
   - Gestisce il carosello principale e le offerte

2. `Navbar` (src/components/Navbar)
   - Gestisce la navigazione principale
   - Integra la funzionalit√† di ricerca
   - Gestisce il carrello
   - Utilizza NavbarSlice per la gestione dello stato

3. `Categories` (src/components/Categorie)
   - Visualizza i prodotti in formato griglia o carosello
   - Gestisce filtri per brand, categoria, prezzo
   - Supporta visualizzazione responsive
   - Integra la funzionalit√† "Buy Now"

4. `ProductDetails` (src/components/ProductsDetails)
   - Mostra i dettagli completi del prodotto
   - Gestisce la visibilit√† tramite ProductDetailsSlice
   - Integra con il sistema di navigazione

5. `SingleProduct` (src/components/SingleProduct)
   - Visualizzazione dettagliata di un singolo prodotto
   - Gestisce lo stato del prodotto selezionato
   - Integrato con il sistema di navigazione

6. `BrandSection` (src/components/BrandSection)
   - Componente riutilizzabile per le sezioni dei brand
   - Integra il componente Categories con filtri specifici per brand

7. `SideBar` (src/components/Slidebar)
   - Menu laterale per la navigazione mobile
   - Gestito da SideBarSlice per la visibilit√†

### Gestione dello Stato (Redux)
1. Slices:
   - `HomeSlice`: Gestisce la visibilit√† della home
   - `NavbarSlice`: Gestisce tab attivo e ricerca
   - `ProductDetailsSlice`: Controlla la visibilit√† dei dettagli
   - `SingleProductSlice`: Gestisce prodotto selezionato e visibilit√†
   - `SideBarSlice`: Controlla la visibilit√† della sidebar

2. Pattern di Visibilit√†:
   - Utilizzo di un pattern comune per la gestione della visibilit√†
   - Implementato in visibilitySlice.js
   - Azioni standardizzate: show, hide, toggle

### Struttura dei Dati
1. `products.js` (src/data)
   - Database locale dei prodotti
   - Struttura: id, nome, prezzo, categoria, brand, etc.

2. `images.js` (src/data)
   - Gestione centralizzata delle immagini
   - Organizzate per: banner, categorie, brand, loghi

3. `constants.js` (src/config)
   - Configurazioni globali
   - Breakpoints responsive
   - Valori predefiniti
   - Categorie e brand

### Custom Hooks
1. `useResponsiveCards`
   - Gestisce il numero di card visibili in base alla viewport
   - Utilizzato nel componente Categories

2. `useCountdown`
   - Gestisce il timer per le offerte
   - Utilizzato nella sezione offerte della Home

## Flusso di Navigazione
1. Home Page
   - Banner principale (carosello automatico)
   - Categorie principali
   - Prodotti consigliati
   - Sezioni brand specifiche
   - Offerte del giorno
   - Form di contatto

2. Prodotti
   - Accesso da:
     * Categorie nella Home
     * Navigazione principale
     * Link dei brand
   - Filtri disponibili per:
     * Categoria
     * Brand
     * Prezzo
     * Promozioni

3. Dettaglio Prodotto
   - Accesso da:
     * Click su prodotto nella griglia
     * "Buy Now" button
   - Mostra:
     * Immagini prodotto
     * Descrizione dettagliata
     * Prezzo e disponibilit√†
     * Opzioni di acquisto

## Responsive Design
- Breakpoints principali:
  * Mobile: <= 582px
  * Tablet: <= 880px
  * Desktop Small: <= 1176px
  * Desktop Large: <= 1472px
- Adattamento automatico del layout
- Sidebar per navigazione mobile
- Numero di card responsive

## Ottimizzazioni
1. Componenti Riutilizzabili
   - BrandSection per sezioni brand
   - ProductCard per visualizzazione prodotti
   - PromoCard per offerte speciali

2. Gestione Stato Centralizzata
   - Pattern comune per visibilit√†
   - Slices Redux organizzati
   - Costanti centralizzate

3. Performance
   - Lazy loading delle immagini
   - Componenti ottimizzati
   - Gestione efficiente dello stato

## Tecnologie Utilizzate
- React
- Redux Toolkit
- TailwindCSS
- DaisyUI
- Vite

## Struttura delle Directory

```
/src
‚îú‚îÄ‚îÄ /assets                    # Risorse statiche
‚îÇ   ‚îú‚îÄ‚îÄ /images               # Immagini del sito
‚îÇ   ‚îú‚îÄ‚îÄ /logos               # Loghi dei brand
‚îÇ   ‚îî‚îÄ‚îÄ /icons               # Icone dell'interfaccia
‚îÇ
‚îú‚îÄ‚îÄ /components               # Componenti riutilizzabili
‚îÇ   ‚îú‚îÄ‚îÄ /Navbar              # ‚úÖ COMPLETATO
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Navbar.jsx
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ NavbarSlice.js
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ /Footer             # ‚úÖ COMPLETATO
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Footer.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ /ProductCard        # ‚è≥ DA IMPLEMENTARE
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ProductCard.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ /ProductGrid        # üîÑ IN PROGRESS
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ProductGrid.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ /ProductFilter      # ‚úÖ COMPLETATO
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ProductFilter.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ /CartDrawer         # ‚è≥ DA IMPLEMENTARE
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ CartDrawer.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ /BrandSection       # ‚úÖ COMPLETATO
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ BrandSection.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îî‚îÄ‚îÄ /Categories         # ‚úÖ COMPLETATO
‚îÇ       ‚îî‚îÄ‚îÄ Categories.jsx
‚îÇ
‚îú‚îÄ‚îÄ /pages                   # Pagine dell'applicazione
‚îÇ   ‚îú‚îÄ‚îÄ /Home               # ‚úÖ COMPLETATO
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Home.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ /ProductDetail      # ‚úÖ COMPLETATO
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ProductDetail.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ /Checkout          # ‚è≥ DA IMPLEMENTARE
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Checkout.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ /Cart              # ‚è≥ DA IMPLEMENTARE
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Cart.jsx
‚îÇ   ‚îÇ
‚îÇ   ‚îî‚îÄ‚îÄ /NotFound          # ‚è≥ DA IMPLEMENTARE
‚îÇ       ‚îî‚îÄ‚îÄ NotFound.jsx
‚îÇ
‚îú‚îÄ‚îÄ /data                   # Gestione dati
‚îÇ   ‚îú‚îÄ‚îÄ products.js        # ‚úÖ COMPLETATO - Database prodotti
‚îÇ   ‚îú‚îÄ‚îÄ images.js          # ‚úÖ COMPLETATO - Gestione immagini
‚îÇ   ‚îî‚îÄ‚îÄ constants.js       # ‚úÖ COMPLETATO - Configurazioni
‚îÇ
‚îú‚îÄ‚îÄ /hooks                  # Custom hooks
‚îÇ   ‚îú‚îÄ‚îÄ useCountdown.js    # ‚úÖ COMPLETATO
‚îÇ   ‚îú‚îÄ‚îÄ useResponsiveCards.js # ‚úÖ COMPLETATO
‚îÇ   ‚îî‚îÄ‚îÄ useCart.js         # ‚è≥ DA IMPLEMENTARE
‚îÇ
‚îú‚îÄ‚îÄ /context               # Context API
‚îÇ   ‚îî‚îÄ‚îÄ CartContext.jsx    # ‚è≥ DA IMPLEMENTARE
‚îÇ
‚îú‚îÄ‚îÄ /redux                 # Gestione stato Redux
‚îÇ   ‚îú‚îÄ‚îÄ store.js          # ‚úÖ COMPLETATO
‚îÇ   ‚îî‚îÄ‚îÄ /slices           # ‚úÖ COMPLETATO
‚îÇ       ‚îú‚îÄ‚îÄ homeSlice.js
‚îÇ       ‚îú‚îÄ‚îÄ navbarSlice.js
‚îÇ       ‚îî‚îÄ‚îÄ sidebarSlice.js
‚îÇ
‚îî‚îÄ‚îÄ App.jsx               # ‚úÖ COMPLETATO

Legenda:
‚úÖ COMPLETATO      - Componente implementato e funzionante
üîÑ IN PROGRESS    - Componente in fase di sviluppo
‚è≥ DA IMPLEMENTARE - Componente da sviluppare
```

### Priorit√† di Sviluppo
1. Sistema Carrello
   - CartDrawer.jsx
   - useCart.js
   - CartContext.jsx
   - Cart.jsx

2. Processo di Checkout
   - Checkout.jsx
   - Integrazione pagamenti
   - Gestione ordini

3. Gestione Errori
   - NotFound.jsx
   - Gestione errori API
   - Validazione form